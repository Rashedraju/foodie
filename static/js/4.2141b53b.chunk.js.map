{"version":3,"sources":["components/Payment/Payment.module.scss","components/UI/OrderConfirm/OrderConfirm.module.scss","containers/Checkout/Checkout.module.scss","components/Form/PaymentForm/PaymentForm.js","components/UI/CheckoutStepButtons/CheckoutStepButtons.js","components/Payment/Payment.js","components/ShippingDetails/ShippingDetails.js","components/UI/OrderConfirm/OrderConfirm.js","shared/selector.js","views/OrderSummary/OrderSummary.js","containers/Checkout/Checkout.js"],"names":["module","exports","AutoFormSubmit","executeSubmit","useFormikContext","submitForm","errors","values","isSubmitAble","name","cardnumber","expiry","cvv","useEffect","PaymentForm","submitCardInfo","initialValues","validationSchema","Yup","required","test","value","valid","cardholderName","isValid","max","number","expirationDate","onSubmit","actions","setSubmitting","formik","Form","className","Row","Col","sm","Control","id","type","placeholder","getFieldProps","touched","maxLength","CheckoutStepButtons","loading","backTitle","nextTitle","buttonBack","buttonNext","Button","variant","onClick","Spinner","as","role","animation","size","Payment","useState","method","setMethod","setExecuteSubmit","paymentInfo","setPaymentInfo","methodOneStyle","methodTwoStyle","methodOneRadioStyle","methodTwoRadioStyle","push","styles","activeMethod","activeMethodRadio","pop","Card","Body","methodToggler","methodRadio","join","tabIndex","style","marginLeft","fontSize","paymentDetails","textAlign","data","cardInfo","count","ShippingDetails","fullName","email","submitSippingInfo","fullname","address","phone","matches","handleSubmit","OrderConfirm","error","clicked","orderConfirm","failed","success","icon","title","subtitle","bottom","button","attribute","identifier","document","getElementById","getElementsByClassName","OrderSummary","cartItems","price","toggleToCart","updateCount","length","map","item","CartItem","key","AmountSummary","to","maxWidth","connect","state","cart","authRedirectPath","home","user","auth","dispatch","onToggleToCart","add","onUpdateItemCount","onToggleCartUI","bool","onClearCart","props","history","stepNo","setStepNo","setLoading","setError","orderItems","orderPrice","orderData","setOrderData","isAuthenticated","replace","selector","pointerEvents","stepView","paymentHandler","updatedOderData","prevState","submitOrder","then","catch","e","console","log","displayName","shippingInfo","shippingDetailsHandler","checkout","steps","el","stepsItem","stepsNo","activeStepNo","stepsTitle"],"mappings":"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","file":"static/js/4.2141b53b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg-black\":\"Payment_bg-black__cThPl\",\"sticky-top\":\"Payment_sticky-top__3TOJW\",\"outline-none\":\"Payment_outline-none__72eWU\",\"shadow-md\":\"Payment_shadow-md__2hhRm\",\"pointer\":\"Payment_pointer__3QOsH\",\"radius-0\":\"Payment_radius-0__2GBqL\",\"btn-white\":\"Payment_btn-white__2x2JZ\",\"pr-sm\":\"Payment_pr-sm__3GZTX\",\"w-on-sm-100\":\"Payment_w-on-sm-100__3JY7v\",\"w-sm-50\":\"Payment_w-sm-50__1BBBH\",\"display-md\":\"Payment_display-md__1Zm5a\",\"w-min-md\":\"Payment_w-min-md__IOAar\",\"w-md-75\":\"Payment_w-md-75__1NKHN\",\"w-md-50\":\"Payment_w-md-50__3hcJp\",\"w-mx-md-100\":\"Payment_w-mx-md-100__2ZnZN\",\"checkout__step\":\"Payment_checkout__step__x7pR_\",\"slide-right\":\"Payment_slide-right__38Wdi\",\"methodToggler\":\"Payment_methodToggler__WXK39\",\"methodRadio\":\"Payment_methodRadio__3mxL7\",\"activeMethodRadio\":\"Payment_activeMethodRadio__NqvyL\",\"paymentDetails\":\"Payment_paymentDetails__1STpC\",\"activeMethod\":\"Payment_activeMethod__TeGdU\",\"scale1\":\"Payment_scale1__1yBj-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderConfirm\":\"OrderConfirm_orderConfirm__1-eNq\",\"icon\":\"OrderConfirm_icon__QErn-\",\"title\":\"OrderConfirm_title__3TfM8\",\"bottom\":\"OrderConfirm_bottom__xbefo\",\"button\":\"OrderConfirm_button__3oXUv\",\"success\":\"OrderConfirm_success__z0c_h\",\"subtitle\":\"OrderConfirm_subtitle__17Ne-\",\"failed\":\"OrderConfirm_failed__1NAa3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg-black\":\"Checkout_bg-black__2Loga\",\"sticky-top\":\"Checkout_sticky-top__1V2RD\",\"outline-none\":\"Checkout_outline-none__3SqIJ\",\"shadow-md\":\"Checkout_shadow-md__1pmBM\",\"pointer\":\"Checkout_pointer__1YN6R\",\"radius-0\":\"Checkout_radius-0__1H73-\",\"btn-white\":\"Checkout_btn-white__15mqB\",\"pr-sm\":\"Checkout_pr-sm__37ZCn\",\"w-on-sm-100\":\"Checkout_w-on-sm-100__1ogQY\",\"w-sm-50\":\"Checkout_w-sm-50__2nhPn\",\"display-md\":\"Checkout_display-md__3lGpz\",\"w-min-md\":\"Checkout_w-min-md__2dP5P\",\"w-md-75\":\"Checkout_w-md-75__2FO9S\",\"w-md-50\":\"Checkout_w-md-50__4nokc\",\"w-mx-md-100\":\"Checkout_w-mx-md-100__3DmYY\",\"checkout__step\":\"Checkout_checkout__step__2HdBv\",\"slide-right\":\"Checkout_slide-right__3m5Bk\",\"checkout\":\"Checkout_checkout__3LYDR\",\"steps\":\"Checkout_steps__1Yysi\",\"stepsItem\":\"Checkout_stepsItem__2bTiy\",\"stepsNo\":\"Checkout_stepsNo__3JCNV\",\"activeStepNo\":\"Checkout_activeStepNo__2cY_S\",\"stepsTitle\":\"Checkout_stepsTitle__2vmed\",\"scale1\":\"Checkout_scale1__kcVeG\"};","import valid from 'card-validator';\r\nimport { Formik, useFormikContext } from 'formik';\r\nimport React, { useEffect } from 'react';\r\nimport { Col, Form, Row } from 'react-bootstrap';\r\nimport * as Yup from 'yup';\r\n\r\nconst AutoFormSubmit = ({ executeSubmit }) => {\r\n    const { submitForm, errors, values } = useFormikContext();\r\n    const isSubmitAble =\r\n        values.name !== '' &&\r\n        values.cardnumber !== '' &&\r\n        values.expiry !== '' &&\r\n        values.cvv !== '' &&\r\n        !errors.name &&\r\n        !errors.cardnumber &&\r\n        !errors.expiry &&\r\n        !errors.cvv;\r\n\r\n    useEffect(() => {\r\n        if (executeSubmit || isSubmitAble) submitForm();\r\n    }, [executeSubmit, isSubmitAble, submitForm]);\r\n    return null;\r\n};\r\n\r\nconst PaymentForm = ({ submitCardInfo, executeSubmit }) => (\r\n    <Formik\r\n        initialValues={{\r\n            name: '',\r\n            cardnumber: '',\r\n            expiry: '',\r\n            cvv: '',\r\n        }}\r\n        // Form validation\r\n        validationSchema={Yup.object({\r\n            name: Yup.string()\r\n                .required('Name is required')\r\n                .test(\r\n                    'test-name',\r\n                    'Card name is invalid',\r\n                    (value) => valid.cardholderName(value).isValid\r\n                ),\r\n\r\n            cardnumber: Yup.string()\r\n                .max(19)\r\n                .required('Please Enter your card number')\r\n                .test(\r\n                    'test-number',\r\n                    'Card number is invalid',\r\n                    (value) => valid.number(value).isValid\r\n                ),\r\n            expiry: Yup.string()\r\n                .required('Please enter your card expiry date')\r\n                .test(\r\n                    'test-expiry',\r\n                    'Card expiry date is invalid',\r\n                    (value) => valid.expirationDate(value).isValid\r\n                ),\r\n            cvv: Yup.string()\r\n                .max(4)\r\n                .required('Please enter at least 3 digits')\r\n                .test('test-cvv', 'Card cvv is invalid', (value) => valid.cvv(value).isValid),\r\n        })}\r\n        onSubmit={(values, actions) => {\r\n            submitCardInfo(values);\r\n            actions.setSubmitting(false);\r\n        }}\r\n    >\r\n        {(formik) => (\r\n            <Form className=\"form\">\r\n                <Row>\r\n                    <Col sm={6} className=\"mt-3\">\r\n                        <Form.Control\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            placeholder=\"Name on card\"\r\n                            {...formik.getFieldProps('name')}\r\n                        />\r\n                        {formik.touched.name && formik.errors.name ? (\r\n                            <p className=\"pl-2 text-danger mb-0\">{formik.errors.name}</p>\r\n                        ) : (\r\n                            <div> &nbsp;</div>\r\n                        )}\r\n                    </Col>\r\n                    <Col sm={6} className=\"mt-3\">\r\n                        <Form.Control\r\n                            id=\"cardnumber\"\r\n                            type=\"text\"\r\n                            placeholder=\"Card number\"\r\n                            {...formik.getFieldProps('cardnumber')}\r\n                        />\r\n                        {formik.touched.cardnumber && formik.errors.cardnumber ? (\r\n                            <p className=\"pl-2 text-danger mb-0\">{formik.errors.cardnumber}</p>\r\n                        ) : (\r\n                            <div> &nbsp;</div>\r\n                        )}\r\n                    </Col>\r\n                    <Col sm={6} className=\"mt-3\">\r\n                        <Form.Control\r\n                            id=\"expiry\"\r\n                            type=\"text\"\r\n                            placeholder=\"Expiry date\"\r\n                            {...formik.getFieldProps('expiry')}\r\n                        />\r\n                        {formik.touched.expiry && formik.errors.expiry ? (\r\n                            <p className=\"pl-2 text-danger mb-0\">{formik.errors.expiry}</p>\r\n                        ) : (\r\n                            <div> &nbsp;</div>\r\n                        )}\r\n                    </Col>\r\n                    <Col sm={6} className=\"mt-3\">\r\n                        <Form.Control\r\n                            id=\"cvv\"\r\n                            type=\"text\"\r\n                            placeholder=\"CVV\"\r\n                            maxLength={4}\r\n                            {...formik.getFieldProps('cvv')}\r\n                        />\r\n                        {formik.touched.cvv && formik.errors.cvv ? (\r\n                            <p className=\"pl-2 text-danger mb-0\">{formik.errors.cvv}</p>\r\n                        ) : (\r\n                            <div> &nbsp;</div>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                <AutoFormSubmit executeSubmit={executeSubmit} />\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n);\r\n\r\nexport default PaymentForm;\r\n","import React from 'react';\r\nimport { Button, Spinner } from 'react-bootstrap';\r\nimport { IoArrowBackOutline, IoArrowForwardOutline } from 'react-icons/io5';\r\n\r\nconst CheckoutStepButtons = ({ loading, backTitle, nextTitle, buttonBack, buttonNext }) => (\r\n    <div className=\"w-100 d-flex justify-content-between my-3 px-3\">\r\n        <Button\r\n            type=\"button\"\r\n            variant=\"light\"\r\n            className=\"border border-primary mr-2 shadow-none text-uppercase d-flex align-items-center\"\r\n            onClick={buttonBack}\r\n        >\r\n            <IoArrowBackOutline /> {backTitle}\r\n        </Button>\r\n        <Button\r\n            type=\"submit\"\r\n            variant=\"primary\"\r\n            className=\"ml-2 shadow-none text-uppercase d-flex align-items-center\"\r\n            onClick={buttonNext}\r\n        >\r\n            {loading ? (\r\n                <Spinner as=\"span\" role=\"status\" animation=\"border\" size=\"sm\" />\r\n            ) : (\r\n                <>\r\n                    {' '}\r\n                    {nextTitle} <IoArrowForwardOutline />{' '}\r\n                </>\r\n            )}\r\n        </Button>\r\n    </div>\r\n);\r\n\r\nexport default CheckoutStepButtons;\r\n","import React, { useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { FaCcMastercard } from 'react-icons/fa';\r\nimport { RiVisaFill } from 'react-icons/ri';\r\nimport PaymentForm from '../Form/PaymentForm/PaymentForm';\r\nimport CheckoutStepButtons from '../UI/CheckoutStepButtons/CheckoutStepButtons';\r\nimport styles from './Payment.module.scss';\r\n\r\nconst Payment = ({ buttonBack, submitCardInfo, loading }) => {\r\n    const [method, setMethod] = useState('card');\r\n    const [executeSubmit, setExecuteSubmit] = useState(0);\r\n    const [paymentInfo, setPaymentInfo] = useState({});\r\n\r\n    const [methodOneStyle, methodTwoStyle, methodOneRadioStyle, methodTwoRadioStyle] = [\r\n        [],\r\n        [],\r\n        [],\r\n        [],\r\n    ];\r\n\r\n    if (method === 'card') {\r\n        methodOneStyle.push(styles.activeMethod);\r\n        methodOneRadioStyle.push(styles.activeMethodRadio);\r\n        methodTwoStyle.pop();\r\n        methodTwoRadioStyle.pop();\r\n    }\r\n    if (method === 'cash') {\r\n        methodTwoStyle.push(styles.activeMethod);\r\n        methodTwoRadioStyle.push(styles.activeMethodRadio);\r\n        methodOneStyle.pop();\r\n        methodOneRadioStyle.pop();\r\n    }\r\n\r\n    const buttonNextHandler = () => {\r\n        if (method === 'card') {\r\n            if (paymentInfo.cardInfo) {\r\n                submitCardInfo({\r\n                    ...paymentInfo,\r\n                });\r\n            }\r\n            setExecuteSubmit((count) => count + 1);\r\n        } else if (method === 'cash') {\r\n            submitCardInfo({\r\n                method,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-md-75 my-3 checkout__step\">\r\n            <Card className=\"my-3\">\r\n                <Card.Body>\r\n                    <div className={styles.methodToggler}>\r\n                        <span\r\n                            className={`${styles.methodRadio} ${methodOneRadioStyle.join(' ')}`}\r\n                            role=\"button\"\r\n                            tabIndex={-1}\r\n                            onClick={() => setMethod('card')}\r\n                        />{' '}\r\n                        Credit / Debit Card\r\n                        <div style={{ marginLeft: 'auto', fontSize: '2rem' }}>\r\n                            {' '}\r\n                            <RiVisaFill /> <FaCcMastercard />{' '}\r\n                        </div>\r\n                    </div>\r\n                    <div className={`${styles.paymentDetails} ${methodOneStyle.join(' ')}`}>\r\n                        <h4 className=\"text-center\"> Accepted cards </h4>\r\n                        <div style={{ textAlign: 'center', fontSize: '2rem' }}>\r\n                            <RiVisaFill /> <FaCcMastercard />{' '}\r\n                        </div>\r\n                        <PaymentForm\r\n                            executeSubmit={executeSubmit}\r\n                            submitCardInfo={(data) =>\r\n                                setPaymentInfo({ cardInfo: { ...data }, method })\r\n                            }\r\n                        />\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <Card className=\"my-3\">\r\n                <Card.Body>\r\n                    <div className={`${styles.methodToggler} my-3`}>\r\n                        <span\r\n                            className={`${styles.methodRadio} ${methodTwoRadioStyle.join(' ')}`}\r\n                            role=\"button\"\r\n                            tabIndex={-2}\r\n                            onClick={() => setMethod('cash')}\r\n                        />{' '}\r\n                        Cash\r\n                    </div>\r\n                    <div className={`${styles.paymentDetails} ${methodTwoStyle.join(' ')}`}>\r\n                        <h4>Pay by cash</h4>\r\n                        <p>\r\n                            Consider payment upon ordering for contactless delivery. You can&apos;t\r\n                            pay by a card to the rider upon delivery.\r\n                        </p>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <CheckoutStepButtons\r\n                backTitle=\"go back\"\r\n                nextTitle=\"place order\"\r\n                loading={loading}\r\n                buttonBack={buttonBack}\r\n                buttonNext={buttonNextHandler}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Payment;\r\n","import { Formik } from 'formik';\r\nimport React from 'react';\r\nimport { Col, Form, Row } from 'react-bootstrap';\r\nimport * as Yup from 'yup';\r\nimport CheckoutStepButtons from '../UI/CheckoutStepButtons/CheckoutStepButtons';\r\n\r\nconst ShippingDetails = ({ fullName, email, buttonBack, submitSippingInfo }) => {\r\n    const phoneNumberRegex = /^(\\+8801)[1-9]\\d{8}/g;\r\n    return (\r\n        <div className=\"p-2 w-md-75 checkout__step\">\r\n            <h4 className=\"text-center\"> Shipping Details </h4>\r\n            <Formik\r\n                initialValues={{\r\n                    fullname: fullName,\r\n                    email,\r\n                    address: '',\r\n                    phone: '+8801',\r\n                }}\r\n                // Form validation\r\n                validationSchema={Yup.object({\r\n                    fullname: Yup.string().required('Name required!'),\r\n                    email: Yup.string().email().required('Please enter your email address.'),\r\n                    address: Yup.string().required('Please enter delivery address.'),\r\n                    phone: Yup.string()\r\n                        .matches(phoneNumberRegex)\r\n                        .required('Phone number required.'),\r\n                })}\r\n                onSubmit={(values) => {\r\n                    submitSippingInfo(values);\r\n                }}\r\n            >\r\n                {(formik) => (\r\n                    <Form className=\"form\" onSubmit={formik.handleSubmit}>\r\n                        <Row>\r\n                            <Col sm={6} className=\"my-3\">\r\n                                <Form.Control\r\n                                    id=\"fullname\"\r\n                                    placeholder=\"Full Name\"\r\n                                    {...formik.getFieldProps('fullname')}\r\n                                />\r\n                                {formik.touched.fullname && formik.errors.fullname ? (\r\n                                    <p className=\"pl-2 text-danger mb-0\">\r\n                                        {formik.errors.fullname}\r\n                                    </p>\r\n                                ) : (\r\n                                    <div> &nbsp;</div>\r\n                                )}\r\n                            </Col>\r\n                            <Col sm={6} className=\"my-3\">\r\n                                <Form.Control\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Email Address\"\r\n                                    {...formik.getFieldProps('email')}\r\n                                />\r\n                                {formik.touched.email && formik.errors.email ? (\r\n                                    <p className=\"pl-2 text-danger mb-0\">{formik.errors.email}</p>\r\n                                ) : (\r\n                                    <div> &nbsp;</div>\r\n                                )}\r\n                            </Col>\r\n                            <Col sm={6} className=\"my-3\">\r\n                                <Form.Control\r\n                                    id=\"address\"\r\n                                    placeholder=\"Enter full shipping address\"\r\n                                    {...formik.getFieldProps('address')}\r\n                                />\r\n                                {formik.touched.address && formik.errors.address ? (\r\n                                    <p className=\"pl-2 text-danger mb-0\">{formik.errors.address}</p>\r\n                                ) : (\r\n                                    <div> &nbsp;</div>\r\n                                )}\r\n                            </Col>\r\n                            <Col sm={6} className=\"my-3\">\r\n                                <Form.Control\r\n                                    id=\"phone\"\r\n                                    type=\"phone\"\r\n                                    placeholder=\"Mobile Number\"\r\n                                    {...formik.getFieldProps('phone')}\r\n                                />\r\n                                {formik.touched.phone && formik.errors.phone ? (\r\n                                    <p className=\"pl-2 text-danger mb-0\">{formik.errors.phone}</p>\r\n                                ) : (\r\n                                    <div> &nbsp;</div>\r\n                                )}\r\n                            </Col>\r\n                        </Row>\r\n                        <CheckoutStepButtons\r\n                            backTitle=\"go back\"\r\n                            nextTitle=\"continue to payment\"\r\n                            buttonBack={buttonBack}\r\n                        />\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShippingDetails;\r\n","import React from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport { GiCheckMark } from 'react-icons/gi';\r\nimport styles from './OrderConfirm.module.scss';\r\n\r\nconst OrderConfirm = ({ error, clicked }) => (\r\n    <Card className=\"w-md-75 my-3 checkout__step\">\r\n        <Card.Body>\r\n            <div\r\n                className={` checkout__step ${styles.orderConfirm} ${\r\n                    error ? styles.failed : styles.success\r\n                }`}\r\n            >\r\n                {error ? (\r\n                    <FaTimes className={styles.icon} />\r\n                ) : (\r\n                    <GiCheckMark className={styles.icon} />\r\n                )}\r\n\r\n                <div className={styles.title}> {error ? 'Failed' : 'Awesome'} </div>\r\n                <p className={styles.subtitle}>\r\n                    {' '}\r\n                    {error\r\n                        ? 'Oops! Something went terribly wrong here'\r\n                        : 'Congratulatins. your order is accepted!'}\r\n                </p>\r\n\r\n                <div className={styles.bottom}>\r\n                    <Button className={styles.button} onClick={clicked}>\r\n                        {error ? 'Please try again' : 'More hungry. Lets do again'}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </Card.Body>\r\n    </Card>\r\n);\r\n\r\nexport default OrderConfirm;\r\n","export default (attribute, identifier) => {\r\n    switch (attribute) {\r\n        case 'id':\r\n            return document.getElementById(identifier);\r\n        case 'class':\r\n            return document.getElementsByClassName(identifier);\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n","import CartItem from 'components/Cart/CartItem/CartItem';\r\nimport React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport CheckoutStepButtons from '../../components/UI/CheckoutStepButtons/CheckoutStepButtons';\r\nimport AmountSummary from '../AmountSummary/AmountSummary';\r\n\r\nconst OrderSummary = ({ cartItems, price, toggleToCart, updateCount, buttonBack, buttonNext }) => (\r\n    <div className=\"p-2 w-md-75 checkout__step\">\r\n        {cartItems.length > 0 ? (\r\n            <>\r\n                <h4 className=\"text-center\"> Order Summary </h4>\r\n                <p className=\"text-center\">Review items in your basket.</p>\r\n                {cartItems.map((item) => (\r\n                    <CartItem\r\n                        key={item.id}\r\n                        item={item}\r\n                        toggleToCart={() => toggleToCart(false, item)}\r\n                        updateCount={updateCount}\r\n                    />\r\n                ))}\r\n                <AmountSummary price={price} />\r\n                <CheckoutStepButtons\r\n                    backTitle=\"continue shopping\"\r\n                    nextTitle=\"continue to shipping\"\r\n                    buttonBack={buttonBack}\r\n                    buttonNext={buttonNext}\r\n                />{' '}\r\n            </>\r\n        ) : (\r\n            <Card>\r\n                <Card.Body>\r\n                    <h4 className=\"text-center\"> Your cart is empty! </h4>\r\n                    <p className=\"text-center\"> Start adding items to your cart </p>\r\n                    <NavLink\r\n                        to=\"./\"\r\n                        className=\"btn btn-primary d-block mx-auto shadow-none text-uppercase\"\r\n                        style={{ maxWidth: '20rem' }}\r\n                    >\r\n                        Continue shopping\r\n                    </NavLink>\r\n                </Card.Body>\r\n            </Card>\r\n        )}\r\n    </div>\r\n);\r\n\r\nexport default OrderSummary;\r\n","import { submitOrder } from 'adapters/firebase';\r\nimport Payment from 'components/Payment/Payment';\r\nimport ShippingDetails from 'components/ShippingDetails/ShippingDetails';\r\nimport OrderConfirm from 'components/UI/OrderConfirm/OrderConfirm';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport selector from 'shared/selector';\r\nimport * as actions from 'store/actions';\r\nimport OrderSummary from 'views/OrderSummary/OrderSummary';\r\nimport styles from './Checkout.module.scss';\r\n\r\nconst Checkout = (props) => {\r\n    const {\r\n        onToggleCartUI,\r\n        cartItems,\r\n        price,\r\n        onToggleToCart,\r\n        onUpdateItemCount,\r\n        history,\r\n        authRedirectPath,\r\n        user,\r\n        onClearCart,\r\n    } = props;\r\n\r\n    const [stepNo, setStepNo] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    const [orderData, setOrderData] = useState({\r\n        orderItems: [...cartItems],\r\n        orderPrice: { ...price },\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!user.isAuthenticated) history.replace(authRedirectPath);\r\n\r\n        onToggleCartUI(false);\r\n        selector('id', 'cartToggler').style.pointerEvents = 'none';\r\n        return () => {\r\n            selector('id', 'cartToggler').style.pointerEvents = 'auto';\r\n        };\r\n    }, [authRedirectPath, history, onToggleCartUI, user.isAuthenticated]);\r\n\r\n    const submitOrderHandler = (data) => {\r\n        setLoading(true);\r\n        submitOrder(data)\r\n            .then(() => {\r\n                setStepNo((count) => count + 1);\r\n                setLoading(false);\r\n                setError(false);\r\n                onClearCart();\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n                setLoading(false);\r\n                setError(true);\r\n            });\r\n    };\r\n\r\n    const shippingDetailsHandler = (values) => {\r\n        setOrderData((prevState) => ({ ...prevState, shippingInfo: { ...values } }));\r\n        setStepNo((count) => count + 1);\r\n    };\r\n\r\n    const paymentHandler = (values) => {\r\n        const updatedOderData = {\r\n            ...orderData,\r\n            paymentInfo: { ...values },\r\n        };\r\n        setOrderData((prevState) => ({ ...prevState, ...updatedOderData }));\r\n        submitOrderHandler(updatedOderData);\r\n    };\r\n\r\n    const confirmOrderButtonHander = () => {\r\n        if (!error) {\r\n            history.replace('./');\r\n        } else {\r\n            setStepNo(3);\r\n        }\r\n    };\r\n\r\n    const steps = [\r\n        {\r\n            id: 1,\r\n            title: 'Order Summary',\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Shipping Details',\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'Payment',\r\n        },\r\n    ];\r\n\r\n    let stepView;\r\n    if (stepNo === 1)\r\n        stepView = (\r\n            <OrderSummary\r\n                cartItems={cartItems}\r\n                price={price}\r\n                toggleToCart={onToggleToCart}\r\n                updateCount={onUpdateItemCount}\r\n                buttonBack={() => history.push(authRedirectPath)}\r\n                buttonNext={() => setStepNo((count) => count + 1)}\r\n            />\r\n        );\r\n    if (stepNo === 2)\r\n        stepView = (\r\n            <ShippingDetails\r\n                fullName={user.displayName}\r\n                email={user.email}\r\n                buttonBack={() => setStepNo((count) => count - 1)}\r\n                submitSippingInfo={(values) => shippingDetailsHandler(values)}\r\n            />\r\n        );\r\n    if (stepNo === 3)\r\n        stepView = (\r\n            <Payment\r\n                loading={loading}\r\n                buttonBack={() => setStepNo((count) => count - 1)}\r\n                submitCardInfo={(values) => paymentHandler(values)}\r\n            />\r\n        );\r\n    if (stepNo === 4) {\r\n        stepView = <OrderConfirm error={error} clicked={confirmOrderButtonHander} />;\r\n    }\r\n\r\n    return (\r\n        <section className={`container py-5 ${styles.checkout}`}>\r\n            {stepNo < 4 && (\r\n                <div className={styles.steps}>\r\n                    {steps.map((el) => (\r\n                        <div className={styles.stepsItem} key={el.id}>\r\n                            <div\r\n                                className={[\r\n                                    styles.stepsNo,\r\n                                    el.id === stepNo && styles.activeStepNo,\r\n                                ].join(' ')}\r\n                            >\r\n                                {' '}\r\n                                {el.id}{' '}\r\n                            </div>\r\n                            <div className={styles.stepsTitle}> {el.title} </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            {stepView}\r\n        </section>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    cartItems: state.cart.cartItems,\r\n    price: state.cart.price,\r\n    authRedirectPath: state.home.authRedirectPath,\r\n    user: state.auth.user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onToggleToCart: (add, item) => dispatch(actions.toggleToCart(add, item)),\r\n    onUpdateItemCount: (id, identifier) => dispatch(actions.updateItemCount(id, identifier)),\r\n    onToggleCartUI: (bool) => dispatch(actions.toggleCartUI(bool)),\r\n    onClearCart: () => dispatch(actions.onClearCart()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);\r\n"],"sourceRoot":""}