{"version":3,"sources":["containers/Search/Search.js"],"names":["Search","props","handleToggleCartItem","isAddedToCart","item","onToggleToCart","this","location","history","onQueryChange","onSearchFood","cartItems","urlParams","URLSearchParams","search","has","get","query","replace","searchResult","loading","foods","error","length","toggleToCart","Array","fill","style","textAlign","center","queryChange","PureComponent","connect","state","cart","loader","dispatch","value","actions","isAdded"],"mappings":"uMAOMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAgBVC,qBAAuB,SAACC,EAAeC,GACnC,EAAKC,eAAeF,EAAeC,IAhBnC,EAAKC,eAAiBJ,EAAMI,eAFb,E,qDAKnB,WAAqB,IAAD,EACsDC,KAAKL,MAAnEM,EADQ,EACRA,SAAUC,EADF,EACEA,QAASC,EADX,EACWA,cAAeC,EAD1B,EAC0BA,aAAcC,EADxC,EACwCA,UAClDC,EAAY,IAAIC,gBAAgBN,EAASO,QAC/C,GAAIF,EAAUG,IAAI,MAA+B,KAAvBH,EAAUI,IAAI,KAAa,CACjD,IAAMC,EAAQL,EAAUI,IAAI,KAC5BP,EAAcQ,GACdP,EAAaO,EAAON,QAEpBH,EAAQU,QAAQ,Q,oBAQxB,WAAU,IAGFC,EAHC,EACmDb,KAAKL,MAArDmB,EADH,EACGA,QAASC,EADZ,EACYA,MAAOC,EADnB,EACmBA,MAAOL,EAD1B,EAC0BA,MAAOR,EADjC,EACiCA,cAUtC,OAPIY,EAAME,OAAS,EACfJ,EAAe,kBAAC,IAAD,CAAOE,MAAOA,EAAOG,aAAclB,KAAKJ,uBAChDkB,EACPD,EAAe,kBAAC,IAAD,CAAOE,MAAO,IAAII,MAAM,IAAIC,KAAK,MACzCJ,IACPH,EAAe,uBAAGQ,MAAO,CAAEC,UAAW,WAAvB,qBAGf,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWC,QAAM,EAACZ,MAAOA,EAAOa,YAAarB,IAC5CU,O,GApCIY,iBAwDNC,uBAdS,SAACC,GAAD,MAAY,CAChChB,MAAOgB,EAAMnB,OAAOG,MACpBI,MAAOY,EAAMnB,OAAOO,MACpBV,UAAWsB,EAAMC,KAAKvB,UACtBS,QAASa,EAAMnB,OAAOqB,OACtBb,MAAOW,EAAMnB,OAAOQ,UAGG,SAACc,GAAD,MAAe,CACtC3B,cAAe,SAAC4B,GAAD,OAAWD,EAASE,IAAoBD,KACvD3B,aAAc,SAACO,EAAON,GAAR,OAAsByB,EAASE,IAAmBrB,EAAON,KACvEN,eAAgB,SAACkC,EAASnC,GAAV,OAAmBgC,EAASE,IAAqBC,EAASnC,QAG/D4B,CAA6ChC","file":"static/js/4.7527bed5.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Foods from '../../components/Foods/Foods';\r\nimport SearchBar from '../../components/UI/SearchBar/SearchBar';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport * as actions from '../../store/actions';\r\n\r\nclass Search extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onToggleToCart = props.onToggleToCart;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { location, history, onQueryChange, onSearchFood, cartItems } = this.props;\r\n        const urlParams = new URLSearchParams(location.search);\r\n        if (urlParams.has('q') && urlParams.get('q') !== '') {\r\n            const query = urlParams.get('q');\r\n            onQueryChange(query);\r\n            onSearchFood(query, cartItems);\r\n        } else {\r\n            history.replace('./');\r\n        }\r\n    }\r\n\r\n    handleToggleCartItem = (isAddedToCart, item) => {\r\n        this.onToggleToCart(isAddedToCart, item);\r\n    };\r\n\r\n    render() {\r\n        const { loading, foods, error, query, onQueryChange } = this.props;\r\n\r\n        let searchResult;\r\n        if (foods.length > 0) {\r\n            searchResult = <Foods foods={foods} toggleToCart={this.handleToggleCartItem} />;\r\n        } else if (loading) {\r\n            searchResult = <Foods foods={new Array(10).fill({})} />;\r\n        } else if (error) {\r\n            searchResult = <p style={{ textAlign: 'center' }}>Foods not found!</p>;\r\n        }\r\n        return (\r\n            <Aux>\r\n                <SearchBar center query={query} queryChange={onQueryChange} />\r\n                {searchResult}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    query: state.search.query,\r\n    foods: state.search.foods,\r\n    cartItems: state.cart.cartItems,\r\n    loading: state.search.loader,\r\n    error: state.search.error,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onQueryChange: (value) => dispatch(actions.queryChange(value)),\r\n    onSearchFood: (query, cartItems) => dispatch(actions.searchFood(query, cartItems)),\r\n    onToggleToCart: (isAdded, item) => dispatch(actions.toggleToCart(isAdded, item)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n"],"sourceRoot":""}